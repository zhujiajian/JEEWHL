<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro namespace>${className}.</#macro>

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="${basepackage}.dao.I${className}Dao">

	<resultMap id="RM_${className}" type="${basepackage}.entity.${className}">
        <#list table.columns as column>
			<#if column.pk>
				<id property="id" column="${column.sqlName}"/>
			<#else>
        		<result property="${column.columnNameLower}" column="${column.sqlName}"/>
			</#if>
		</#list>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<!-- 增加 -->
	<insert id="add" parameterType="${basepackage}.entity.${className}">
		INSERT INTO ${table.sqlName}
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<#list table.columns as column>
			<#if column.pk>
			<if test="entity.id != null">
			<#else>
			<if test="entity.${column.columnNameFirstLower} != null">
			</#if>
				${column.sqlName},
			</if>
			</#list>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
		<#list table.columns as column>
			<#if column.pk>
			<if test="entity.id != null">
				<@mapperEl "entity.id"/>,
			</if>
			<#else>
			<if test="entity.${column.columnNameFirstLower} != null">
				<@mapperEl "entity."+column.columnNameFirstLower/>,
			</if>
			</#if>
		</#list>
		</trim>
	</insert>

	<!-- 批量增加 -->
	<insert id="addMore" parameterType="java.util.List">
		INSERT INTO ${table.sqlName}
			(
			<#list table.columns as column>
				${column.sqlName}<#if column_has_next>,</#if>
			</#list>
			) VALUES
		<foreach collection="entities" item="entity" index="index" open="" close="" separator=",">
			(
			<#list table.columns as column>
				<#if column.pk>
				<@mapperEl "entity.id"/><#if column_has_next>,</#if>
				<#else>
				<@mapperEl "entity."+column.columnNameFirstLower/><#if column_has_next>,</#if>
				</#if>
			</#list>
			)
		</foreach>
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="${basepackage}.entity.${className}">
		UPDATE ${table.sqlName}
		<set>
		<#list table.columns as column>
			<#if !column.pk>
			<if test="entity.${column.columnNameFirstLower} != null">
				${column.sqlName} = <@mapperEl "entity."+column.columnNameFirstLower/>,
			</if>
			</#if>
		</#list>
		</set>
		WHERE <#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl "entity.id"/> <#if column_has_next> AND </#if> </#list>
	</update>

	<!-- 批量更新 -->
	<update id="updateMore" parameterType="java.util.List">
		<foreach collection="entities" item="entity" index="index" open="" close="" separator=";">
		UPDATE ${table.sqlName}
		<set>
		<#list table.columns as column>
			<#if !column.pk>
			<if test="entity.${column.columnNameFirstLower} != null">
				${column.sqlName} = <@mapperEl "entity."+column.columnNameFirstLower/>,
			</if>
			</#if>
		</#list>
		</set>
		WHERE <#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl "entity.id"/> <#if column_has_next> AND </#if> </#list>
		</foreach>
	</update>

	<!-- 删除 -->
    <delete id="delete" parameterType="${table.idColumn.javaType}">
		<![CDATA[
			DELETE FROM ${table.sqlName} WHERE
			<#list table.compositeIdColumns as column>
			${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
			</#list>
		]]>
    </delete>

	<!-- 批量删除 -->
	<delete id="deleteMore" parameterType="java.util.List">
		DELETE FROM ${table.sqlName} WHERE
		<#list table.compositeIdColumns as column>
		${column.sqlName} in
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			<@mapperEl 'id'/> <#if column_has_next> AND </#if>
		</foreach>
		</#list>
	</delete>

	<!-- 根据主键查询 -->
    <select id="findByPK" resultMap="RM_${className}">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM ${table.sqlName} 
	        WHERE 
				<#list table.compositeIdColumns as column>
		        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
		        </#list>    
	    ]]>
	</select>
	
	<!-- 根据编码查询 -->
	<select id="findByNo" resultMap="RM_${className}">
		SELECT <include refid="columns" />
		<![CDATA[
		    FROM ${table.sqlName}
	        WHERE
		        no = <@mapperEl 'no'/>
	    ]]>
	</select>

	<!-- 根据名称查询 -->
	<select id="findByName" resultMap="RM_${className}">
		SELECT <include refid="columns" />
		<![CDATA[
		    FROM ${table.sqlName}
	        WHERE
		        name = <@mapperEl 'no'/>
	    ]]>
	</select>
	
	<sql id="findByPageWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <#list table.columns as column>
			<#if column.pk>
			<if test="entity.id != null and entity.id !=''">
				AND ${column.sqlName} = <@mapperEl "entity.id"/>
			</if>
			<#else>
			<if test="entity.${column.columnNameFirstLower} != null and entity.${column.columnNameFirstLower} !=''">
				AND ${column.sqlName} = <@mapperEl "entity."+column.columnNameFirstLower/>
			</if>
			</#if>
	       </#list>
		</where>
	</sql>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findByPage" resultMap="RM_${className}">
    	SELECT <include refid="columns" />
	    FROM ${table.sqlName} 
		<include refid="findByPageWhere"/>
    </select>

	<!-- 查询所有数据 -->
	<select id="findAll" resultMap="RM_${className}">
		SELECT <include refid="columns" />
		FROM ${table.sqlName}
		<include refid="findByPageWhere"/>
	</select>
	
</mapper>

