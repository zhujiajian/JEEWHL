<?xml version="1.0" encoding="UTF-8"?>

<configuration>
	<!--
	说明：
	1、日志级别及文件
	    日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中
	    例如：error级别记录到mes-base.xxx.error.log或mes-base.error.log（该文件为当前记录的日志文件），而mes-base.xxx.error.log为归档日志，
	    其它级别的日志也是如此。
	2、文件路径
	    若开发、测试用，在Eclipse中运行项目，则到Eclipse的安装路径查找logs文件夹，以相对路径../logs。
	    若部署到Tomcat下，则在Tomcat下的logs文件中
	3、Appender
	    DATELOG_ERROR对应error级别，文件名以mes-base.error.log形式命名
	    DATELOG_WARN对应warn级别，文件名以mes-base.warn.log形式命名
	    DATELOG_INFO对应info级别，文件名以mes-base.info.log形式命名
	    DATELOG_DEBUG对应debug级别，文件名以mes-base.debug.log形式命名
	    STDOUT将日志信息输出到控制上，为方便开发测试使用
    -->
	<property name="LOG_HOME" value="D:/logs/" />
	
	<!--设置系统日志目录-->
	<property name="APP_DIR" value="jee_web_logs" />
	
	<!-- 在控制台输出时候的设置 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] [%F/%L] %-5level - %msg%n</pattern>
		</layout>
	</appender>
	
	<!-- 按照每天生成日志文件 info信息-->
	<appender name="DATELOG_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_HOME}/${APP_DIR}/mes_base_web.info.log</file>
		<!-- <Prudent>true</Prudent> -->
		<!-- 此日志文件只记录info级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<!-- 日志记录器的滚动策略，按日期记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径 -->
			<FileNamePattern>${LOG_HOME}/${APP_DIR}/info/mes_base_web.%d{yyyy-MM-dd}.%i.info.log</FileNamePattern>
			<MaxHistory>90</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy  
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">  
                <MaxFileSize>100MB</MaxFileSize>  
            </TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] [%F/%L] %-5level - %msg%n</pattern>
		</layout>
	</appender>

	<!-- 按照每天生成日志文件 error信息 -->
	<appender name="DATELOG_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_HOME}/${APP_DIR}/mes_base_web.error.log</file>
		<!-- <Prudent>true</Prudent> -->
		<!-- 此日志文件只记录error级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<!-- 日志记录器的滚动策略，按日期记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${APP_DIR}/error/mes_base_web.%d{yyyy-MM-dd}.%i.error.log
			</FileNamePattern>
			<MaxHistory>90</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy  
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">  
                <MaxFileSize>100MB</MaxFileSize>  
            </TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 日志文件的格式 -->
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] [%F/%L] %-5level - %msg%n</pattern>
		</layout>
	</appender>
	
	<!-- 按照每天生成日志文件 debug信息 -->
	<appender name="DATELOG_DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_HOME}/${APP_DIR}/mes_base_web.debug.log</file>
		<!-- <Prudent>true</Prudent> -->
		<!-- 此日志文件只记录debug级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<!-- 日志记录器的滚动策略，按日期记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${APP_DIR}/debug/mes_base_web.%d{yyyy-MM-dd}.%i.debug.log
			</FileNamePattern>
			<MaxHistory>90</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy  
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">  
                <MaxFileSize>100MB</MaxFileSize>  
            </TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 日志文件的格式 -->
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] [%F/%L] %-5level - %msg%n</pattern>
		</layout>
	</appender>
	
	<!-- 按照每天生成日志文件 warn信息 -->
	<appender name="DATELOG_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_HOME}/${APP_DIR}/mes_base_web.warn.log</file>
		<!-- <Prudent>true</Prudent> -->
		<!-- 此日志文件只记录warn级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<!-- 日志记录器的滚动策略，按日期记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${APP_DIR}/warn/mes_base_web.%d{yyyy-MM-dd}.%i.warn.log
			</FileNamePattern>
			<MaxHistory>90</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy  
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">  
                <MaxFileSize>100MB</MaxFileSize>  
            </TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 日志文件的格式 -->
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] [%F/%L] %-5level - %msg%n</pattern>
		</layout>
	</appender>
	
	<!--log4jdbc -->
    <logger name="jdbc.sqltiming" level="debug"/>
    <logger name="com.ibatis" level="debug" />
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="debug" />
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="debug" />
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="debug" />
    <logger name="java.sql.Connection" level="debug" />
    <logger name="java.sql.Statement" level="debug" />
    <logger name="java.sql.PreparedStatement" level="debug" />
    <logger name="java.sql.ResultSet" level="debug" />
	
	<logger name="com" additivity="false" level="DEBUG">
		<appender-ref ref="STDOUT" /> 
		<appender-ref ref="DATELOG_INFO" />
		<appender-ref ref="DATELOG_ERROR" />
		<appender-ref ref="DATELOG_DEBUG" />
		<appender-ref ref="DATELOG_WARN" />
	</logger>

	<logger name="org.springframework" level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="DATELOG_DEBUG" />
	</logger>
	
</configuration>
